/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SahabaMarketplace,
  SahabaMarketplaceInterface,
} from "../../contracts/SahabaMarketplace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collectionName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collectionNameSymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createAndListToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getServiceFeesPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "mintedBy",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "currentOwner",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "previousOwner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "platformFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numberOfTransfers",
            type: "uint256",
          },
        ],
        internalType: "struct SahabaMarketplace.MarketItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getTotalNumberOfTokensOwnedByAnAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setServiceFeesPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "tokenURIExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006008556658d15e17628000600b553480156200002157600080fd5b50604080518082018252601681527f5361686162615f4e46545f4d61726b6574706c6163650000000000000000000060208083019182528351808501909452600684526553414841424160d01b908401528151919291620000859160009162000201565b5080516200009b90600190602084019062000201565b505050620000b8620000b26200010060201b60201c565b62000104565b620000c262000156565b8051620000d89160099160209091019062000201565b50620000e3620001f0565b8051620000f991600a9160209091019062000201565b50620002e4565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060600080546200016790620002a7565b80601f01602080910402602001604051908101604052809291908181526020018280546200019590620002a7565b8015620001e65780601f10620001ba57610100808354040283529160200191620001e6565b820191906000526020600020905b815481529060010190602001808311620001c857829003601f168201915b5050505050905090565b6060600180546200016790620002a7565b8280546200020f90620002a7565b90600052602060002090601f0160209004810192826200023357600085556200027e565b82601f106200024e57805160ff19168380011785556200027e565b828001600101855582156200027e579182015b828111156200027e57825182559160200191906001019062000261565b506200028c92915062000290565b5090565b5b808211156200028c576000815560010162000291565b600181811c90821680620002bc57607f821691505b60208210811415620002de57634e487b7160e01b600052602260045260246000fd5b50919050565b61272180620002f46000396000f3fe6080604052600436106101cd5760003560e01c80636f9507f9116100f7578063a22cb46511610095578063e5326ab111610064578063e5326ab114610595578063e985e9c5146105aa578063f2fde38b146105f3578063fbc28f871461061357600080fd5b8063a22cb46514610515578063a5cd761f14610535578063b88d4fde14610555578063c87b56dd1461057557600080fd5b80637bdc60d9116100d15780637bdc60d91461043c5780638b08daa8146104c25780638da5cb5b146104e257806395d89b411461050057600080fd5b80636f9507f9146103f257806370a0823114610407578063715018a61461042757600080fd5b80633bb3a24d1161016f57806343d32ae71161013e57806343d32ae7146103645780635f0bc1181461039f57806362e8e8ac146103b25780636352211e146103d257600080fd5b80633bb3a24d146102d657806342842e0e146102f657806342966c6814610316578063439028501461033657600080fd5b8063095ea7b3116101ab578063095ea7b314610261578063142687f31461028357806323b872dd146102a35780632d296bf1146102c357600080fd5b806301ffc9a7146101d257806306fdde0314610207578063081812fc14610229575b600080fd5b3480156101de57600080fd5b506101f26101ed3660046120de565b610628565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b5061021c61067a565b6040516101fe9190612153565b34801561023557600080fd5b50610249610244366004612166565b61070c565b6040516001600160a01b0390911681526020016101fe565b34801561026d57600080fd5b5061028161027c36600461219b565b610733565b005b34801561028f57600080fd5b506101f261029e366004612166565b61084e565b3480156102af57600080fd5b506102816102be3660046121c5565b610861565b6102816102d1366004612166565b610892565b3480156102e257600080fd5b5061021c6102f1366004612166565b610be6565b34801561030257600080fd5b506102816103113660046121c5565b610bf3565b34801561032257600080fd5b50610281610331366004612166565b610c0e565b34801561034257600080fd5b50610356610351366004612201565b610c9d565b6040519081526020016101fe565b34801561037057600080fd5b506101f261037f3660046122c8565b8051602081830181018051600d8252928201919093012091525460ff1681565b6103566103ad3660046122fd565b610ca9565b3480156103be57600080fd5b506102816103cd366004612342565b610eeb565b3480156103de57600080fd5b506102496103ed366004612166565b61110f565b3480156103fe57600080fd5b5061021c61116f565b34801561041357600080fd5b50610356610422366004612201565b6111fd565b34801561043357600080fd5b50610281611283565b34801561044857600080fd5b5061045c610457366004612166565b611297565b6040516101fe9190600060e08201905082518252602083015160018060a01b03808216602085015280604086015116604085015280606086015116606085015250506080830151608083015260a083015160a083015260c083015160c083015292915050565b3480156104ce57600080fd5b506102816104dd366004612166565b6113b5565b3480156104ee57600080fd5b506007546001600160a01b0316610249565b34801561050c57600080fd5b5061021c611442565b34801561052157600080fd5b50610281610530366004612364565b611451565b34801561054157600080fd5b50610249610550366004612166565b611460565b34801561056157600080fd5b506102816105703660046123a0565b61146c565b34801561058157600080fd5b5061021c610590366004612166565b6114a4565b3480156105a157600080fd5b5061021c6115b5565b3480156105b657600080fd5b506101f26105c536600461241c565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156105ff57600080fd5b5061028161060e366004612201565b6115c2565b34801561061f57600080fd5b50600b54610356565b60006001600160e01b031982166380ac58cd60e01b148061065957506001600160e01b03198216635b5e139f60e01b145b8061067457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546106899061244f565b80601f01602080910402602001604051908101604052809291908181526020018280546106b59061244f565b80156107025780601f106106d757610100808354040283529160200191610702565b820191906000526020600020905b8154815290600101906020018083116106e557829003601f168201915b5050505050905090565b60006107178261163b565b506000908152600460205260409020546001600160a01b031690565b600061073e8261110f565b9050806001600160a01b0316836001600160a01b031614156107b15760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806107cd57506107cd81336105c5565b61083f5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016107a8565b610849838361168b565b505050565b60008061085a836116f9565b9392505050565b61086b3382611716565b6108875760405162461bcd60e51b81526004016107a89061248a565b610849838383611794565b336108d35760405162461bcd60e51b81526020600482015260116024820152701859191c995cdcc81b9bdd08199bdd5b99607a1b60448201526064016107a8565b60006108de8261110f565b90506001600160a01b0381166109365760405162461bcd60e51b815260206004820181905260248201527f746f6b656e206f776e65722061646472657373206973206d697373656420212160448201526064016107a8565b6001600160a01b0381163314156109c05760405162461bcd60e51b815260206004820152604260248201527f746865206f6e652077686f2077616e747320746f206275792074686520746f6b60448201527f656e2073686f756c64206e6f742062652074686520746f6b656e2773206f776e60648201526132b960f11b608482015260a4016107a8565b6000828152600c6020908152604091829020825160e0810184528154815260018201546001600160a01b0390811693820193909352600282015483169381019390935260038101549091166060830152600481015460808301819052600582015460a084015260069091015460c0830152341015610a985760405162461bcd60e51b815260206004820152602f60248201527f796f75277265206e6f742073656e64696e6720656e6f756768206d6f6e65792060448201526e1d1bc8189d5e481d1a1a5cc8139195608a1b60648201526084016107a8565b80604001516001600160a01b03166108fc82608001519081150290604051600060405180830381858888f19350505050158015610ad9573d6000803e3d6000fd5b5060a081015115610b245760075460a08201516040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610b22573d6000803e3d6000fd5b505b610b2f823385611794565b6040810180516001600160a01b0316606083015233905260c08101805160019190610b5b9083906124ee565b9052506000928352600c602090815260409384902082518155908201516001820180546001600160a01b03199081166001600160a01b039384161790915594830151600283018054871691831691909117905560608301516003830180549096169116179093556080810151600484015560a0810151600584015560c0015160069092019190915550565b6060600061085a836114a4565b6108498383836040518060200160405280600081525061146c565b6000610c19826116f9565b905080610c5f5760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064016107a8565b6000610c6a8361110f565b90506001600160a01b0381163314610c945760405162461bcd60e51b81526004016107a890612506565b61084983611930565b60008061085a836111fd565b600033610cef5760405162461bcd60e51b815260206004820152601460248201527361646472657373206e6f7420666f756e6420212160601b60448201526064016107a8565b600d83604051610cff919061254f565b9081526040519081900360200190205460ff1615610d5f5760405162461bcd60e51b815260206004820152601a60248201527f746f6b656e55524920697320616c7265616479206d696e74656400000000000060448201526064016107a8565b60008211610daf5760405162461bcd60e51b815260206004820152601860248201527f5072696365206d7573742062652061626f7665207a65726f000000000000000060448201526064016107a8565b600854610dbd9060016124ee565b600855600b5460009015610def57670de0b6b3a7640000600b5484610de2919061256b565b610dec91906125a0565b90505b6000670de0b6b3a7640000610e0483866125b4565b610e0e91906125a0565b9050610e1c33600854611970565b610e2860085486611aa3565b610e33306001611451565b6040805160e0810182526008805480835233602080850182815285870192835260006060870181815260808801998a5260a088019a8b5260c08801828152958252600c909352969096209451855594516001850180546001600160a01b039283166001600160a01b031991821617909155915160028601805491831691841691909117905594516003850180549190961691161790935592516004820155925160058401555160069092019190915554905092915050565b33610f2d5760405162461bcd60e51b815260206004820152601260248201527161646472657373206973206d697373696e6760701b60448201526064016107a8565b6000610f388361110f565b90506001600160a01b0381163314610f625760405162461bcd60e51b81526004016107a890612506565b6000600c60008581526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016003820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600482015481526020016005820154815260200160068201548152505090508281608001818152505080600c60008681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816004015560a0820151816005015560c0820151816006015590505050505050565b6000818152600260205260408120546001600160a01b0316806106745760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016107a8565b600a805461117c9061244f565b80601f01602080910402602001604051908101604052809291908181526020018280546111a89061244f565b80156111f55780601f106111ca576101008083540402835291602001916111f5565b820191906000526020600020905b8154815290600101906020018083116111d857829003601f168201915b505050505081565b60006001600160a01b0382166112675760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016107a8565b506001600160a01b031660009081526003602052604090205490565b61128b611b2e565b6112956000611b88565b565b6112f26040518060e001604052806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b60006112fd836116f9565b9050806113435760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064016107a8565b50506000908152600c6020908152604091829020825160e0810184528154815260018201546001600160a01b039081169382019390935260028201548316938101939093526003810154909116606083015260048101546080830152600581015460a08301526006015460c082015290565b6113bd611b2e565b6007546001600160a01b0316331461143d5760405162461bcd60e51b815260206004820152603960248201527f796f7520646f6e277420686176652061636365737320746f206d6f646966792060448201527f74686520706c6174666f726d207365727669636520666565730000000000000060648201526084016107a8565b600b55565b6060600180546106899061244f565b61145c338383611bda565b5050565b60008061085a8361110f565b6114763383611716565b6114925760405162461bcd60e51b81526004016107a89061248a565b61149e84848484611ca9565b50505050565b60606114af8261163b565b600082815260066020526040812080546114c89061244f565b80601f01602080910402602001604051908101604052809291908181526020018280546114f49061244f565b80156115415780601f1061151657610100808354040283529160200191611541565b820191906000526020600020905b81548152906001019060200180831161152457829003601f168201915b50505050509050600061155f60408051602081019091526000815290565b9050805160001415611572575092915050565b8151156115a457808260405160200161158c9291906125cb565b60405160208183030381529060405292505050919050565b6115ad84611cdc565b949350505050565b6009805461117c9061244f565b6115ca611b2e565b6001600160a01b03811661162f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107a8565b61163881611b88565b50565b611644816116f9565b6116385760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016107a8565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906116c08261110f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000908152600260205260409020546001600160a01b0316151590565b6000806117228361110f565b9050806001600160a01b0316846001600160a01b0316148061176957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806115ad5750836001600160a01b03166117828461070c565b6001600160a01b031614949350505050565b826001600160a01b03166117a78261110f565b6001600160a01b03161461180b5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016107a8565b6001600160a01b03821661186d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016107a8565b61187860008261168b565b6001600160a01b03831660009081526003602052604081208054600192906118a19084906125b4565b90915550506001600160a01b03821660009081526003602052604081208054600192906118cf9084906124ee565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61193981611d4f565b600081815260066020526040902080546119529061244f565b15905061163857600081815260066020526040812061163891611ff5565b6001600160a01b0382166119c65760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016107a8565b6119cf816116f9565b15611a1c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107a8565b6001600160a01b0382166000908152600360205260408120805460019290611a459084906124ee565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b611aac826116f9565b611b0f5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016107a8565b600082815260066020908152604090912082516108499284019061202f565b6007546001600160a01b031633146112955760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107a8565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415611c3c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016107a8565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611cb4848484611794565b611cc084848484611dea565b61149e5760405162461bcd60e51b81526004016107a8906125fa565b6060611ce78261163b565b6000611cfe60408051602081019091526000815290565b90506000815111611d1e576040518060200160405280600081525061085a565b80611d2884611ef7565b604051602001611d399291906125cb565b6040516020818303038152906040529392505050565b6000611d5a8261110f565b9050611d6760008361168b565b6001600160a01b0381166000908152600360205260408120805460019290611d909084906125b4565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b15611eec57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611e2e90339089908890889060040161264c565b602060405180830381600087803b158015611e4857600080fd5b505af1925050508015611e78575060408051601f3d908101601f19168201909252611e7591810190612689565b60015b611ed2573d808015611ea6576040519150601f19603f3d011682016040523d82523d6000602084013e611eab565b606091505b508051611eca5760405162461bcd60e51b81526004016107a8906125fa565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506115ad565b506001949350505050565b606081611f1b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611f455780611f2f816126a6565b9150611f3e9050600a836125a0565b9150611f1f565b60008167ffffffffffffffff811115611f6057611f6061221c565b6040519080825280601f01601f191660200182016040528015611f8a576020820181803683370190505b5090505b84156115ad57611f9f6001836125b4565b9150611fac600a866126c1565b611fb79060306124ee565b60f81b818381518110611fcc57611fcc6126d5565b60200101906001600160f81b031916908160001a905350611fee600a866125a0565b9450611f8e565b5080546120019061244f565b6000825580601f10612011575050565b601f01602090049060005260206000209081019061163891906120b3565b82805461203b9061244f565b90600052602060002090601f01602090048101928261205d57600085556120a3565b82601f1061207657805160ff19168380011785556120a3565b828001600101855582156120a3579182015b828111156120a3578251825591602001919060010190612088565b506120af9291506120b3565b5090565b5b808211156120af57600081556001016120b4565b6001600160e01b03198116811461163857600080fd5b6000602082840312156120f057600080fd5b813561085a816120c8565b60005b838110156121165781810151838201526020016120fe565b8381111561149e5750506000910152565b6000815180845261213f8160208601602086016120fb565b601f01601f19169290920160200192915050565b60208152600061085a6020830184612127565b60006020828403121561217857600080fd5b5035919050565b80356001600160a01b038116811461219657600080fd5b919050565b600080604083850312156121ae57600080fd5b6121b78361217f565b946020939093013593505050565b6000806000606084860312156121da57600080fd5b6121e38461217f565b92506121f16020850161217f565b9150604084013590509250925092565b60006020828403121561221357600080fd5b61085a8261217f565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561224d5761224d61221c565b604051601f8501601f19908116603f011681019082821181831017156122755761227561221c565b8160405280935085815286868601111561228e57600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126122b957600080fd5b61085a83833560208501612232565b6000602082840312156122da57600080fd5b813567ffffffffffffffff8111156122f157600080fd5b6115ad848285016122a8565b6000806040838503121561231057600080fd5b823567ffffffffffffffff81111561232757600080fd5b612333858286016122a8565b95602094909401359450505050565b6000806040838503121561235557600080fd5b50508035926020909101359150565b6000806040838503121561237757600080fd5b6123808361217f565b91506020830135801515811461239557600080fd5b809150509250929050565b600080600080608085870312156123b657600080fd5b6123bf8561217f565b93506123cd6020860161217f565b925060408501359150606085013567ffffffffffffffff8111156123f057600080fd5b8501601f8101871361240157600080fd5b61241087823560208401612232565b91505092959194509250565b6000806040838503121561242f57600080fd5b6124388361217f565b91506124466020840161217f565b90509250929050565b600181811c9082168061246357607f821691505b6020821081141561248457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008219821115612501576125016124d8565b500190565b60208082526029908201527f796f75277265206e6f7420616c6c6f77656420746f206d61696e7461696e20746040820152683434b9903a37b5b2b760b91b606082015260800190565b600082516125618184602087016120fb565b9190910192915050565b6000816000190483118215151615612585576125856124d8565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826125af576125af61258a565b500490565b6000828210156125c6576125c66124d8565b500390565b600083516125dd8184602088016120fb565b8351908301906125f18183602088016120fb565b01949350505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061267f90830184612127565b9695505050505050565b60006020828403121561269b57600080fd5b815161085a816120c8565b60006000198214156126ba576126ba6124d8565b5060010190565b6000826126d0576126d061258a565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220018a1d8a84b2f65be53bb6e77a22680a65b89f5c3a03b539257c64ab46c81ab664736f6c63430008090033";

type SahabaMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SahabaMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SahabaMarketplace__factory extends ContractFactory {
  constructor(...args: SahabaMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SahabaMarketplace> {
    return super.deploy(overrides || {}) as Promise<SahabaMarketplace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SahabaMarketplace {
    return super.attach(address) as SahabaMarketplace;
  }
  override connect(signer: Signer): SahabaMarketplace__factory {
    return super.connect(signer) as SahabaMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SahabaMarketplaceInterface {
    return new utils.Interface(_abi) as SahabaMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SahabaMarketplace {
    return new Contract(address, _abi, signerOrProvider) as SahabaMarketplace;
  }
}
