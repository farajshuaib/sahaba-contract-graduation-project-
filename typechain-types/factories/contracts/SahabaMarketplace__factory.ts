/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SahabaMarketplace,
  SahabaMarketplaceInterface,
} from "../../contracts/SahabaMarketplace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collectionName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collectionNameSymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createAndListToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getServiceFeesPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "mintedBy",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "currentOwner",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "previousOwner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numberOfTransfers",
            type: "uint256",
          },
        ],
        internalType: "struct SahabaMarketplace.MarketItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getTotalNumberOfTokensOwnedByAnAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setServiceFeesPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "tokenURIExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006007556658d15e17628000600b553480156200002157600080fd5b5060408051808201825260118152707361686162614d61726b6574706c61636560781b60208083019182528351808501909452600384526213919560ea1b908401528151919291620000769160009162000195565b5080516200008c90600190602084019062000195565b506200009a915050620000ea565b8051620000b09160089160209091019062000195565b50620000bb62000184565b8051620000d19160099160209091019062000195565b50600a80546001600160a01b0319163317905562000278565b606060008054620000fb906200023b565b80601f016020809104026020016040519081016040528092919081815260200182805462000129906200023b565b80156200017a5780601f106200014e576101008083540402835291602001916200017a565b820191906000526020600020905b8154815290600101906020018083116200015c57829003601f168201915b5050505050905090565b606060018054620000fb906200023b565b828054620001a3906200023b565b90600052602060002090601f016020900481019282620001c7576000855562000212565b82601f10620001e257805160ff191683800117855562000212565b8280016001018555821562000212579182015b8281111562000212578251825591602001919060010190620001f5565b506200022092915062000224565b5090565b5b8082111562000220576000815560010162000225565b600181811c908216806200025057607f821691505b602082108114156200027257634e487b7160e01b600052602260045260246000fd5b50919050565b6124b480620002886000396000f3fe60806040526004361061019c5760003560e01c806362e8e8ac116100ec578063a22cb4651161008a578063c87b56dd11610064578063c87b56dd14610505578063e5326ab114610525578063e985e9c51461053a578063fbc28f871461058357600080fd5b8063a22cb465146104a5578063a5cd761f146104c5578063b88d4fde146104e557600080fd5b806370a08231116100c657806370a08231146103d65780637bdc60d9146103f65780638b08daa81461047057806395d89b411461049057600080fd5b806362e8e8ac146103815780636352211e146103a15780636f9507f9146103c157600080fd5b80632d296bf11161015957806342966c681161013357806342966c68146102e5578063439028501461030557806343d32ae7146103335780635f0bc1181461036e57600080fd5b80632d296bf1146102925780633bb3a24d146102a557806342842e0e146102c557600080fd5b806301ffc9a7146101a157806306fdde03146101d6578063081812fc146101f8578063095ea7b314610230578063142687f31461025257806323b872dd14610272575b600080fd5b3480156101ad57600080fd5b506101c16101bc366004611e71565b610598565b60405190151581526020015b60405180910390f35b3480156101e257600080fd5b506101eb6105ea565b6040516101cd9190611ee6565b34801561020457600080fd5b50610218610213366004611ef9565b61067c565b6040516001600160a01b0390911681526020016101cd565b34801561023c57600080fd5b5061025061024b366004611f2e565b6106a3565b005b34801561025e57600080fd5b506101c161026d366004611ef9565b6107be565b34801561027e57600080fd5b5061025061028d366004611f58565b6107d1565b6102506102a0366004611ef9565b610802565b3480156102b157600080fd5b506101eb6102c0366004611ef9565b610ac8565b3480156102d157600080fd5b506102506102e0366004611f58565b610ad5565b3480156102f157600080fd5b50610250610300366004611ef9565b610af0565b34801561031157600080fd5b50610325610320366004611f94565b610b7f565b6040519081526020016101cd565b34801561033f57600080fd5b506101c161034e36600461205b565b8051602081830181018051600d8252928201919093012091525460ff1681565b61032561037c366004612090565b610b8b565b34801561038d57600080fd5b5061025061039c3660046120d5565b610d6c565b3480156103ad57600080fd5b506102186103bc366004611ef9565b610f7c565b3480156103cd57600080fd5b506101eb610fdc565b3480156103e257600080fd5b506103256103f1366004611f94565b61106a565b34801561040257600080fd5b50610416610411366004611ef9565b6110f0565b6040516101cd9190815181526020808301516001600160a01b0390811691830191909152604080840151821690830152606080840151909116908201526080808301519082015260a0918201519181019190915260c00190565b34801561047c57600080fd5b5061025061048b366004611ef9565b6111d9565b34801561049c57600080fd5b506101eb61125e565b3480156104b157600080fd5b506102506104c03660046120f7565b61126d565b3480156104d157600080fd5b506102186104e0366004611ef9565b61127c565b3480156104f157600080fd5b50610250610500366004612133565b611288565b34801561051157600080fd5b506101eb610520366004611ef9565b6112c0565b34801561053157600080fd5b506101eb6113d1565b34801561054657600080fd5b506101c16105553660046121af565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561058f57600080fd5b50600b54610325565b60006001600160e01b031982166380ac58cd60e01b14806105c957506001600160e01b03198216635b5e139f60e01b145b806105e457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546105f9906121e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610625906121e2565b80156106725780601f1061064757610100808354040283529160200191610672565b820191906000526020600020905b81548152906001019060200180831161065557829003601f168201915b5050505050905090565b6000610687826113de565b506000908152600460205260409020546001600160a01b031690565b60006106ae82610f7c565b9050806001600160a01b0316836001600160a01b031614156107215760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061073d575061073d8133610555565b6107af5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610718565b6107b98383611431565b505050565b6000806107ca8361149f565b9392505050565b6107db33826114bc565b6107f75760405162461bcd60e51b81526004016107189061221d565b6107b983838361153a565b336108435760405162461bcd60e51b81526020600482015260116024820152701859191c995cdcc81b9bdd08199bdd5b99607a1b6044820152606401610718565b600061084e82610f7c565b90506001600160a01b0381166108a65760405162461bcd60e51b815260206004820181905260248201527f746f6b656e206f776e65722061646472657373206973206d69737365642021216044820152606401610718565b6001600160a01b0381163314156109305760405162461bcd60e51b815260206004820152604260248201527f746865206f6e652077686f2077616e747320746f206275792074686520746f6b60448201527f656e2073686f756c64206e6f742062652074686520746f6b656e2773206f776e60648201526132b960f11b608482015260a401610718565b6000828152600c6020908152604091829020825160c0810184528154815260018201546001600160a01b039081169382019390935260028201548316938101939093526003810154909116606083015260048101546080830181905260059091015460a08301523410156109fe5760405162461bcd60e51b815260206004820152602f60248201527f796f75277265206e6f742073656e64696e6720656e6f756768206d6f6e65792060448201526e1d1bc8189d5e481d1a1a5cc8139195608a1b6064820152608401610718565b610a10816080015182604001516116d6565b610a1b82338561153a565b6040810180516001600160a01b0316606083015233905260a08101805160019190610a47908390612281565b9052506000928352600c602090815260409384902082518155908201516001820180546001600160a01b03199081166001600160a01b039384161790915594830151600283018054871691831691909117905560608301516003830180549096169116179093556080810151600484015560a0015160059092019190915550565b606060006107ca836112c0565b6107b983838360405180602001604052806000815250611288565b6000610afb8261149f565b905080610b415760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610718565b6000610b4c83610f7c565b90506001600160a01b0381163314610b765760405162461bcd60e51b815260040161071890612299565b6107b98361176f565b6000806107ca8361106a565b600033610bd15760405162461bcd60e51b815260206004820152601460248201527361646472657373206e6f7420666f756e6420212160601b6044820152606401610718565b600d83604051610be191906122e2565b9081526040519081900360200190205460ff1615610c415760405162461bcd60e51b815260206004820152601a60248201527f746f6b656e55524920697320616c7265616479206d696e7465640000000000006044820152606401610718565b60008211610c915760405162461bcd60e51b815260206004820152601860248201527f5072696365206d7573742062652061626f7665207a65726f00000000000000006044820152606401610718565b600754610c9f906001612281565b6007819055610caf9033906117af565b610cbb600754846118e2565b610cc630600161126d565b506040805160c0810182526007805480835233602080850182815285870192835260006060870181815260808801998a5260a08801828152958252600c909352969096209451855594516001850180546001600160a01b039283166001600160a01b031991821617909155915160028601805491831691841691909117905594516003850180549190961691161790935592516004820155905160059091015554919050565b33610dae5760405162461bcd60e51b815260206004820152601260248201527161646472657373206973206d697373696e6760701b6044820152606401610718565b6000610db983610f7c565b90506001600160a01b0381163314610de35760405162461bcd60e51b815260040161071890612299565b6000600c60008581526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016003820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016004820154815260200160058201548152505090508281608001818152505080600c60008681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816004015560a0820151816005015590505050505050565b6000818152600260205260408120546001600160a01b0316806105e45760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610718565b60098054610fe9906121e2565b80601f0160208091040260200160405190810160405280929190818152602001828054611015906121e2565b80156110625780601f1061103757610100808354040283529160200191611062565b820191906000526020600020905b81548152906001019060200180831161104557829003601f168201915b505050505081565b60006001600160a01b0382166110d45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610718565b506001600160a01b031660009081526003602052604090205490565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529061112b8361149f565b9050806111715760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610718565b50506000908152600c6020908152604091829020825160c0810184528154815260018201546001600160a01b0390811693820193909352600282015483169381019390935260038101549091166060830152600481015460808301526005015460a082015290565b600a546001600160a01b031633146112595760405162461bcd60e51b815260206004820152603960248201527f796f7520646f6e277420686176652061636365737320746f206d6f646966792060448201527f74686520706c6174666f726d20736572766963652066656573000000000000006064820152608401610718565b600b55565b6060600180546105f9906121e2565b61127833838361196d565b5050565b6000806107ca83610f7c565b61129233836114bc565b6112ae5760405162461bcd60e51b81526004016107189061221d565b6112ba84848484611a3c565b50505050565b60606112cb826113de565b600082815260066020526040812080546112e4906121e2565b80601f0160208091040260200160405190810160405280929190818152602001828054611310906121e2565b801561135d5780601f106113325761010080835404028352916020019161135d565b820191906000526020600020905b81548152906001019060200180831161134057829003601f168201915b50505050509050600061137b60408051602081019091526000815290565b905080516000141561138e575092915050565b8151156113c05780826040516020016113a89291906122fe565b60405160208183030381529060405292505050919050565b6113c984611a6f565b949350505050565b60088054610fe9906121e2565b6113e78161149f565b61142e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610718565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061146682610f7c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000908152600260205260409020546001600160a01b0316151590565b6000806114c883610f7c565b9050806001600160a01b0316846001600160a01b0316148061150f57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806113c95750836001600160a01b03166115288461067c565b6001600160a01b031614949350505050565b826001600160a01b031661154d82610f7c565b6001600160a01b0316146115b15760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610718565b6001600160a01b0382166116135760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610718565b61161e600082611431565b6001600160a01b038316600090815260036020526040812080546001929061164790849061232d565b90915550506001600160a01b0382166000908152600360205260408120805460019290611675908490612281565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000600b54836116e69190612344565b905060006116f4828561232d565b6040519091506001600160a01b0384169082156108fc029083906000818181858888f1935050505015801561172d573d6000803e3d6000fd5b50600a546040516001600160a01b039091169083156108fc029084906000818181858888f19350505050158015611768573d6000803e3d6000fd5b5050505050565b61177881611ae2565b60008181526006602052604090208054611791906121e2565b15905061142e57600081815260066020526040812061142e91611d88565b6001600160a01b0382166118055760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610718565b61180e8161149f565b1561185b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610718565b6001600160a01b0382166000908152600360205260408120805460019290611884908490612281565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6118eb8261149f565b61194e5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610718565b600082815260066020908152604090912082516107b992840190611dc2565b816001600160a01b0316836001600160a01b031614156119cf5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610718565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611a4784848461153a565b611a5384848484611b7d565b6112ba5760405162461bcd60e51b815260040161071890612363565b6060611a7a826113de565b6000611a9160408051602081019091526000815290565b90506000815111611ab157604051806020016040528060008152506107ca565b80611abb84611c8a565b604051602001611acc9291906122fe565b6040516020818303038152906040529392505050565b6000611aed82610f7c565b9050611afa600083611431565b6001600160a01b0381166000908152600360205260408120805460019290611b2390849061232d565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b15611c7f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611bc19033908990889088906004016123b5565b602060405180830381600087803b158015611bdb57600080fd5b505af1925050508015611c0b575060408051601f3d908101601f19168201909252611c08918101906123f2565b60015b611c65573d808015611c39576040519150601f19603f3d011682016040523d82523d6000602084013e611c3e565b606091505b508051611c5d5760405162461bcd60e51b815260040161071890612363565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506113c9565b506001949350505050565b606081611cae5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611cd85780611cc28161240f565b9150611cd19050600a83612440565b9150611cb2565b60008167ffffffffffffffff811115611cf357611cf3611faf565b6040519080825280601f01601f191660200182016040528015611d1d576020820181803683370190505b5090505b84156113c957611d3260018361232d565b9150611d3f600a86612454565b611d4a906030612281565b60f81b818381518110611d5f57611d5f612468565b60200101906001600160f81b031916908160001a905350611d81600a86612440565b9450611d21565b508054611d94906121e2565b6000825580601f10611da4575050565b601f01602090049060005260206000209081019061142e9190611e46565b828054611dce906121e2565b90600052602060002090601f016020900481019282611df05760008555611e36565b82601f10611e0957805160ff1916838001178555611e36565b82800160010185558215611e36579182015b82811115611e36578251825591602001919060010190611e1b565b50611e42929150611e46565b5090565b5b80821115611e425760008155600101611e47565b6001600160e01b03198116811461142e57600080fd5b600060208284031215611e8357600080fd5b81356107ca81611e5b565b60005b83811015611ea9578181015183820152602001611e91565b838111156112ba5750506000910152565b60008151808452611ed2816020860160208601611e8e565b601f01601f19169290920160200192915050565b6020815260006107ca6020830184611eba565b600060208284031215611f0b57600080fd5b5035919050565b80356001600160a01b0381168114611f2957600080fd5b919050565b60008060408385031215611f4157600080fd5b611f4a83611f12565b946020939093013593505050565b600080600060608486031215611f6d57600080fd5b611f7684611f12565b9250611f8460208501611f12565b9150604084013590509250925092565b600060208284031215611fa657600080fd5b6107ca82611f12565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611fe057611fe0611faf565b604051601f8501601f19908116603f0116810190828211818310171561200857612008611faf565b8160405280935085815286868601111561202157600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261204c57600080fd5b6107ca83833560208501611fc5565b60006020828403121561206d57600080fd5b813567ffffffffffffffff81111561208457600080fd5b6113c98482850161203b565b600080604083850312156120a357600080fd5b823567ffffffffffffffff8111156120ba57600080fd5b6120c68582860161203b565b95602094909401359450505050565b600080604083850312156120e857600080fd5b50508035926020909101359150565b6000806040838503121561210a57600080fd5b61211383611f12565b91506020830135801515811461212857600080fd5b809150509250929050565b6000806000806080858703121561214957600080fd5b61215285611f12565b935061216060208601611f12565b925060408501359150606085013567ffffffffffffffff81111561218357600080fd5b8501601f8101871361219457600080fd5b6121a387823560208401611fc5565b91505092959194509250565b600080604083850312156121c257600080fd5b6121cb83611f12565b91506121d960208401611f12565b90509250929050565b600181811c908216806121f657607f821691505b6020821081141561221757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082198211156122945761229461226b565b500190565b60208082526029908201527f796f75277265206e6f7420616c6c6f77656420746f206d61696e7461696e20746040820152683434b9903a37b5b2b760b91b606082015260800190565b600082516122f4818460208701611e8e565b9190910192915050565b60008351612310818460208801611e8e565b835190830190612324818360208801611e8e565b01949350505050565b60008282101561233f5761233f61226b565b500390565b600081600019048311821515161561235e5761235e61226b565b500290565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906123e890830184611eba565b9695505050505050565b60006020828403121561240457600080fd5b81516107ca81611e5b565b60006000198214156124235761242361226b565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261244f5761244f61242a565b500490565b6000826124635761246361242a565b500690565b634e487b7160e01b600052603260045260246000fdfea264697066735822122015248cc625d465565b990dafffebf87ee049172f35e6bce3e3f0c5df4acfd3ba64736f6c63430008090033";

type SahabaMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SahabaMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SahabaMarketplace__factory extends ContractFactory {
  constructor(...args: SahabaMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SahabaMarketplace> {
    return super.deploy(overrides || {}) as Promise<SahabaMarketplace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SahabaMarketplace {
    return super.attach(address) as SahabaMarketplace;
  }
  override connect(signer: Signer): SahabaMarketplace__factory {
    return super.connect(signer) as SahabaMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SahabaMarketplaceInterface {
    return new utils.Interface(_abi) as SahabaMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SahabaMarketplace {
    return new Contract(address, _abi, signerOrProvider) as SahabaMarketplace;
  }
}
