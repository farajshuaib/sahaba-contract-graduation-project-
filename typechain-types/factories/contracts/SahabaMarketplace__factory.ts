/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SahabaMarketplace,
  SahabaMarketplaceInterface,
} from "../../contracts/SahabaMarketplace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collectionName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collectionNameSymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createAndListToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getServiceFeesPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "mintedBy",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "currentOwner",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "previousOwner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "platformFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numberOfTransfers",
            type: "uint256",
          },
        ],
        internalType: "struct SahabaMarketplace.MarketItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getTotalNumberOfTokensOwnedByAnAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setServiceFeesPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "tokenURIExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006007556658d15e17628000600b553480156200002157600080fd5b5060408051808201825260118152707361686162614d61726b6574706c61636560781b60208083019182528351808501909452600684526553414841424160d01b908401528151919291620000799160009162000198565b5080516200008f90600190602084019062000198565b506200009d915050620000ed565b8051620000b39160089160209091019062000198565b50620000be62000187565b8051620000d49160099160209091019062000198565b50600a80546001600160a01b031916331790556200027b565b606060008054620000fe906200023e565b80601f01602080910402602001604051908101604052809291908181526020018280546200012c906200023e565b80156200017d5780601f1062000151576101008083540402835291602001916200017d565b820191906000526020600020905b8154815290600101906020018083116200015f57829003601f168201915b5050505050905090565b606060018054620000fe906200023e565b828054620001a6906200023e565b90600052602060002090601f016020900481019282620001ca576000855562000215565b82601f10620001e557805160ff191683800117855562000215565b8280016001018555821562000215579182015b8281111562000215578251825591602001919060010190620001f8565b506200022392915062000227565b5090565b5b8082111562000223576000815560010162000228565b600181811c908216806200025357607f821691505b602082108114156200027557634e487b7160e01b600052602260045260246000fd5b50919050565b61255f806200028b6000396000f3fe60806040526004361061019c5760003560e01c806362e8e8ac116100ec578063a22cb4651161008a578063c87b56dd11610064578063c87b56dd14610511578063e5326ab114610531578063e985e9c514610546578063fbc28f871461058f57600080fd5b8063a22cb465146104b1578063a5cd761f146104d1578063b88d4fde146104f157600080fd5b806370a08231116100c657806370a08231146103d65780637bdc60d9146103f65780638b08daa81461047c57806395d89b411461049c57600080fd5b806362e8e8ac146103815780636352211e146103a15780636f9507f9146103c157600080fd5b80632d296bf11161015957806342966c681161013357806342966c68146102e5578063439028501461030557806343d32ae7146103335780635f0bc1181461036e57600080fd5b80632d296bf1146102925780633bb3a24d146102a557806342842e0e146102c557600080fd5b806301ffc9a7146101a157806306fdde03146101d6578063081812fc146101f8578063095ea7b314610230578063142687f31461025257806323b872dd14610272575b600080fd5b3480156101ad57600080fd5b506101c16101bc366004611f1c565b6105a4565b60405190151581526020015b60405180910390f35b3480156101e257600080fd5b506101eb6105f6565b6040516101cd9190611f91565b34801561020457600080fd5b50610218610213366004611fa4565b610688565b6040516001600160a01b0390911681526020016101cd565b34801561023c57600080fd5b5061025061024b366004611fd9565b6106af565b005b34801561025e57600080fd5b506101c161026d366004611fa4565b6107ca565b34801561027e57600080fd5b5061025061028d366004612003565b6107dd565b6102506102a0366004611fa4565b61080e565b3480156102b157600080fd5b506101eb6102c0366004611fa4565b610b62565b3480156102d157600080fd5b506102506102e0366004612003565b610b6f565b3480156102f157600080fd5b50610250610300366004611fa4565b610b8a565b34801561031157600080fd5b5061032561032036600461203f565b610c19565b6040519081526020016101cd565b34801561033f57600080fd5b506101c161034e366004612106565b8051602081830181018051600d8252928201919093012091525460ff1681565b61032561037c36600461213b565b610c25565b34801561038d57600080fd5b5061025061039c366004612180565b610e67565b3480156103ad57600080fd5b506102186103bc366004611fa4565b61108b565b3480156103cd57600080fd5b506101eb6110eb565b3480156103e257600080fd5b506103256103f136600461203f565b611179565b34801561040257600080fd5b50610416610411366004611fa4565b6111ff565b6040516101cd9190600060e08201905082518252602083015160018060a01b03808216602085015280604086015116604085015280606086015116606085015250506080830151608083015260a083015160a083015260c083015160c083015292915050565b34801561048857600080fd5b50610250610497366004611fa4565b61131d565b3480156104a857600080fd5b506101eb6113a2565b3480156104bd57600080fd5b506102506104cc3660046121a2565b6113b1565b3480156104dd57600080fd5b506102186104ec366004611fa4565b6113c0565b3480156104fd57600080fd5b5061025061050c3660046121de565b6113cc565b34801561051d57600080fd5b506101eb61052c366004611fa4565b611404565b34801561053d57600080fd5b506101eb611515565b34801561055257600080fd5b506101c161056136600461225a565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561059b57600080fd5b50600b54610325565b60006001600160e01b031982166380ac58cd60e01b14806105d557506001600160e01b03198216635b5e139f60e01b145b806105f057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546106059061228d565b80601f01602080910402602001604051908101604052809291908181526020018280546106319061228d565b801561067e5780601f106106535761010080835404028352916020019161067e565b820191906000526020600020905b81548152906001019060200180831161066157829003601f168201915b5050505050905090565b600061069382611522565b506000908152600460205260409020546001600160a01b031690565b60006106ba8261108b565b9050806001600160a01b0316836001600160a01b0316141561072d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061074957506107498133610561565b6107bb5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610724565b6107c58383611575565b505050565b6000806107d6836115e3565b9392505050565b6107e73382611600565b6108035760405162461bcd60e51b8152600401610724906122c8565b6107c583838361167e565b3361084f5760405162461bcd60e51b81526020600482015260116024820152701859191c995cdcc81b9bdd08199bdd5b99607a1b6044820152606401610724565b600061085a8261108b565b90506001600160a01b0381166108b25760405162461bcd60e51b815260206004820181905260248201527f746f6b656e206f776e65722061646472657373206973206d69737365642021216044820152606401610724565b6001600160a01b03811633141561093c5760405162461bcd60e51b815260206004820152604260248201527f746865206f6e652077686f2077616e747320746f206275792074686520746f6b60448201527f656e2073686f756c64206e6f742062652074686520746f6b656e2773206f776e60648201526132b960f11b608482015260a401610724565b6000828152600c6020908152604091829020825160e0810184528154815260018201546001600160a01b0390811693820193909352600282015483169381019390935260038101549091166060830152600481015460808301819052600582015460a084015260069091015460c0830152341015610a145760405162461bcd60e51b815260206004820152602f60248201527f796f75277265206e6f742073656e64696e6720656e6f756768206d6f6e65792060448201526e1d1bc8189d5e481d1a1a5cc8139195608a1b6064820152608401610724565b80604001516001600160a01b03166108fc82608001519081150290604051600060405180830381858888f19350505050158015610a55573d6000803e3d6000fd5b5060a081015115610aa057600a5460a08201516040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610a9e573d6000803e3d6000fd5b505b610aab82338561167e565b6040810180516001600160a01b0316606083015233905260c08101805160019190610ad790839061232c565b9052506000928352600c602090815260409384902082518155908201516001820180546001600160a01b03199081166001600160a01b039384161790915594830151600283018054871691831691909117905560608301516003830180549096169116179093556080810151600484015560a0810151600584015560c0015160069092019190915550565b606060006107d683611404565b6107c5838383604051806020016040528060008152506113cc565b6000610b95826115e3565b905080610bdb5760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610724565b6000610be68361108b565b90506001600160a01b0381163314610c105760405162461bcd60e51b815260040161072490612344565b6107c58361181a565b6000806107d683611179565b600033610c6b5760405162461bcd60e51b815260206004820152601460248201527361646472657373206e6f7420666f756e6420212160601b6044820152606401610724565b600d83604051610c7b919061238d565b9081526040519081900360200190205460ff1615610cdb5760405162461bcd60e51b815260206004820152601a60248201527f746f6b656e55524920697320616c7265616479206d696e7465640000000000006044820152606401610724565b60008211610d2b5760405162461bcd60e51b815260206004820152601860248201527f5072696365206d7573742062652061626f7665207a65726f00000000000000006044820152606401610724565b600754610d3990600161232c565b600755600b5460009015610d6b57670de0b6b3a7640000600b5484610d5e91906123a9565b610d6891906123de565b90505b6000670de0b6b3a7640000610d8083866123f2565b610d8a91906123de565b9050610d983360075461185a565b610da46007548661198d565b610daf3060016113b1565b6040805160e0810182526007805480835233602080850182815285870192835260006060870181815260808801998a5260a088019a8b5260c08801828152958252600c909352969096209451855594516001850180546001600160a01b039283166001600160a01b031991821617909155915160028601805491831691841691909117905594516003850180549190961691161790935592516004820155925160058401555160069092019190915554905092915050565b33610ea95760405162461bcd60e51b815260206004820152601260248201527161646472657373206973206d697373696e6760701b6044820152606401610724565b6000610eb48361108b565b90506001600160a01b0381163314610ede5760405162461bcd60e51b815260040161072490612344565b6000600c60008581526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016003820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600482015481526020016005820154815260200160068201548152505090508281608001818152505080600c60008681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816004015560a0820151816005015560c0820151816006015590505050505050565b6000818152600260205260408120546001600160a01b0316806105f05760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610724565b600980546110f89061228d565b80601f01602080910402602001604051908101604052809291908181526020018280546111249061228d565b80156111715780601f1061114657610100808354040283529160200191611171565b820191906000526020600020905b81548152906001019060200180831161115457829003601f168201915b505050505081565b60006001600160a01b0382166111e35760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610724565b506001600160a01b031660009081526003602052604090205490565b61125a6040518060e001604052806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b6000611265836115e3565b9050806112ab5760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610724565b50506000908152600c6020908152604091829020825160e0810184528154815260018201546001600160a01b039081169382019390935260028201548316938101939093526003810154909116606083015260048101546080830152600581015460a08301526006015460c082015290565b600a546001600160a01b0316331461139d5760405162461bcd60e51b815260206004820152603960248201527f796f7520646f6e277420686176652061636365737320746f206d6f646966792060448201527f74686520706c6174666f726d20736572766963652066656573000000000000006064820152608401610724565b600b55565b6060600180546106059061228d565b6113bc338383611a18565b5050565b6000806107d68361108b565b6113d63383611600565b6113f25760405162461bcd60e51b8152600401610724906122c8565b6113fe84848484611ae7565b50505050565b606061140f82611522565b600082815260066020526040812080546114289061228d565b80601f01602080910402602001604051908101604052809291908181526020018280546114549061228d565b80156114a15780601f10611476576101008083540402835291602001916114a1565b820191906000526020600020905b81548152906001019060200180831161148457829003601f168201915b5050505050905060006114bf60408051602081019091526000815290565b90508051600014156114d2575092915050565b8151156115045780826040516020016114ec929190612409565b60405160208183030381529060405292505050919050565b61150d84611b1a565b949350505050565b600880546110f89061228d565b61152b816115e3565b6115725760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610724565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906115aa8261108b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000908152600260205260409020546001600160a01b0316151590565b60008061160c8361108b565b9050806001600160a01b0316846001600160a01b0316148061165357506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b8061150d5750836001600160a01b031661166c84610688565b6001600160a01b031614949350505050565b826001600160a01b03166116918261108b565b6001600160a01b0316146116f55760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610724565b6001600160a01b0382166117575760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610724565b611762600082611575565b6001600160a01b038316600090815260036020526040812080546001929061178b9084906123f2565b90915550506001600160a01b03821660009081526003602052604081208054600192906117b990849061232c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61182381611b8d565b6000818152600660205260409020805461183c9061228d565b15905061157257600081815260066020526040812061157291611e33565b6001600160a01b0382166118b05760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610724565b6118b9816115e3565b156119065760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610724565b6001600160a01b038216600090815260036020526040812080546001929061192f90849061232c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b611996826115e3565b6119f95760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610724565b600082815260066020908152604090912082516107c592840190611e6d565b816001600160a01b0316836001600160a01b03161415611a7a5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610724565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611af284848461167e565b611afe84848484611c28565b6113fe5760405162461bcd60e51b815260040161072490612438565b6060611b2582611522565b6000611b3c60408051602081019091526000815290565b90506000815111611b5c57604051806020016040528060008152506107d6565b80611b6684611d35565b604051602001611b77929190612409565b6040516020818303038152906040529392505050565b6000611b988261108b565b9050611ba5600083611575565b6001600160a01b0381166000908152600360205260408120805460019290611bce9084906123f2565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b15611d2a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611c6c90339089908890889060040161248a565b602060405180830381600087803b158015611c8657600080fd5b505af1925050508015611cb6575060408051601f3d908101601f19168201909252611cb3918101906124c7565b60015b611d10573d808015611ce4576040519150601f19603f3d011682016040523d82523d6000602084013e611ce9565b606091505b508051611d085760405162461bcd60e51b815260040161072490612438565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061150d565b506001949350505050565b606081611d595750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611d835780611d6d816124e4565b9150611d7c9050600a836123de565b9150611d5d565b60008167ffffffffffffffff811115611d9e57611d9e61205a565b6040519080825280601f01601f191660200182016040528015611dc8576020820181803683370190505b5090505b841561150d57611ddd6001836123f2565b9150611dea600a866124ff565b611df590603061232c565b60f81b818381518110611e0a57611e0a612513565b60200101906001600160f81b031916908160001a905350611e2c600a866123de565b9450611dcc565b508054611e3f9061228d565b6000825580601f10611e4f575050565b601f0160209004906000526020600020908101906115729190611ef1565b828054611e799061228d565b90600052602060002090601f016020900481019282611e9b5760008555611ee1565b82601f10611eb457805160ff1916838001178555611ee1565b82800160010185558215611ee1579182015b82811115611ee1578251825591602001919060010190611ec6565b50611eed929150611ef1565b5090565b5b80821115611eed5760008155600101611ef2565b6001600160e01b03198116811461157257600080fd5b600060208284031215611f2e57600080fd5b81356107d681611f06565b60005b83811015611f54578181015183820152602001611f3c565b838111156113fe5750506000910152565b60008151808452611f7d816020860160208601611f39565b601f01601f19169290920160200192915050565b6020815260006107d66020830184611f65565b600060208284031215611fb657600080fd5b5035919050565b80356001600160a01b0381168114611fd457600080fd5b919050565b60008060408385031215611fec57600080fd5b611ff583611fbd565b946020939093013593505050565b60008060006060848603121561201857600080fd5b61202184611fbd565b925061202f60208501611fbd565b9150604084013590509250925092565b60006020828403121561205157600080fd5b6107d682611fbd565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561208b5761208b61205a565b604051601f8501601f19908116603f011681019082821181831017156120b3576120b361205a565b816040528093508581528686860111156120cc57600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126120f757600080fd5b6107d683833560208501612070565b60006020828403121561211857600080fd5b813567ffffffffffffffff81111561212f57600080fd5b61150d848285016120e6565b6000806040838503121561214e57600080fd5b823567ffffffffffffffff81111561216557600080fd5b612171858286016120e6565b95602094909401359450505050565b6000806040838503121561219357600080fd5b50508035926020909101359150565b600080604083850312156121b557600080fd5b6121be83611fbd565b9150602083013580151581146121d357600080fd5b809150509250929050565b600080600080608085870312156121f457600080fd5b6121fd85611fbd565b935061220b60208601611fbd565b925060408501359150606085013567ffffffffffffffff81111561222e57600080fd5b8501601f8101871361223f57600080fd5b61224e87823560208401612070565b91505092959194509250565b6000806040838503121561226d57600080fd5b61227683611fbd565b915061228460208401611fbd565b90509250929050565b600181811c908216806122a157607f821691505b602082108114156122c257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561233f5761233f612316565b500190565b60208082526029908201527f796f75277265206e6f7420616c6c6f77656420746f206d61696e7461696e20746040820152683434b9903a37b5b2b760b91b606082015260800190565b6000825161239f818460208701611f39565b9190910192915050565b60008160001904831182151516156123c3576123c3612316565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826123ed576123ed6123c8565b500490565b60008282101561240457612404612316565b500390565b6000835161241b818460208801611f39565b83519083019061242f818360208801611f39565b01949350505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906124bd90830184611f65565b9695505050505050565b6000602082840312156124d957600080fd5b81516107d681611f06565b60006000198214156124f8576124f8612316565b5060010190565b60008261250e5761250e6123c8565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220c99f80a7096d1544933a3623c86b9b10e76e41e8c181a3a8473f426a1c99b1f564736f6c63430008090033";

type SahabaMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SahabaMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SahabaMarketplace__factory extends ContractFactory {
  constructor(...args: SahabaMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SahabaMarketplace> {
    return super.deploy(overrides || {}) as Promise<SahabaMarketplace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SahabaMarketplace {
    return super.attach(address) as SahabaMarketplace;
  }
  override connect(signer: Signer): SahabaMarketplace__factory {
    return super.connect(signer) as SahabaMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SahabaMarketplaceInterface {
    return new utils.Interface(_abi) as SahabaMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SahabaMarketplace {
    return new Contract(address, _abi, signerOrProvider) as SahabaMarketplace;
  }
}
