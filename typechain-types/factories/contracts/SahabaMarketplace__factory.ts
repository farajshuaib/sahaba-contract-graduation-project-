/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SahabaMarketplace,
  SahabaMarketplaceInterface,
} from "../../contracts/SahabaMarketplace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collectionName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collectionNameSymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createAndListToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getServiceFeesPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getTotalNumberOfTokensOwnedByAnAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setServiceFeesPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "tokenURIExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006007556658d15e17628000600b553480156200002157600080fd5b5060408051808201825260118152707361686162614d61726b6574706c61636560781b60208083019182528351808501909452600384526213919560ea1b908401528151919291620000769160009162000195565b5080516200008c90600190602084019062000195565b506200009a915050620000ea565b8051620000b09160089160209091019062000195565b50620000bb62000184565b8051620000d19160099160209091019062000195565b50600a80546001600160a01b0319163317905562000278565b606060008054620000fb906200023b565b80601f016020809104026020016040519081016040528092919081815260200182805462000129906200023b565b80156200017a5780601f106200014e576101008083540402835291602001916200017a565b820191906000526020600020905b8154815290600101906020018083116200015c57829003601f168201915b5050505050905090565b606060018054620000fb906200023b565b828054620001a3906200023b565b90600052602060002090601f016020900481019282620001c7576000855562000212565b82601f10620001e257805160ff191683800117855562000212565b8280016001018555821562000212579182015b8281111562000212578251825591602001919060010190620001f5565b506200022092915062000224565b5090565b5b8082111562000220576000815560010162000225565b600181811c908216806200025057607f821691505b602082108114156200027257634e487b7160e01b600052602260045260246000fd5b50919050565b61212780620002886000396000f3fe6080604052600436106101665760003560e01c806362e8e8ac116100d1578063a22cb4651161008a578063c87b56dd11610064578063c87b56dd14610435578063e5326ab114610455578063e985e9c51461046a578063fbc28f87146104b357600080fd5b8063a22cb465146103d5578063a5cd761f146103f5578063b88d4fde1461041557600080fd5b806362e8e8ac1461032b5780636352211e1461034b5780636f9507f91461036b57806370a08231146103805780638b08daa8146103a057806395d89b41146103c057600080fd5b80632d296bf1116101235780632d296bf11461025c5780633bb3a24d1461026f57806342842e0e1461028f57806343902850146102af57806343d32ae7146102dd5780635f0bc1181461031857600080fd5b806301ffc9a71461016b57806306fdde03146101a0578063081812fc146101c2578063095ea7b3146101fa578063142687f31461021c57806323b872dd1461023c575b600080fd5b34801561017757600080fd5b5061018b610186366004611b4c565b6104c8565b60405190151581526020015b60405180910390f35b3480156101ac57600080fd5b506101b561051a565b6040516101979190611bc1565b3480156101ce57600080fd5b506101e26101dd366004611bd4565b6105ac565b6040516001600160a01b039091168152602001610197565b34801561020657600080fd5b5061021a610215366004611c09565b6105d3565b005b34801561022857600080fd5b5061018b610237366004611bd4565b6106ee565b34801561024857600080fd5b5061021a610257366004611c33565b610712565b61021a61026a366004611bd4565b610743565b34801561027b57600080fd5b506101b561028a366004611bd4565b610a7e565b34801561029b57600080fd5b5061021a6102aa366004611c33565b610a8b565b3480156102bb57600080fd5b506102cf6102ca366004611c6f565b610aa6565b604051908152602001610197565b3480156102e957600080fd5b5061018b6102f8366004611d36565b8051602081830181018051600d8252928201919093012091525460ff1681565b6102cf610326366004611d6b565b610ab2565b34801561033757600080fd5b5061021a610346366004611db0565b610c93565b34801561035757600080fd5b506101e2610366366004611bd4565b610ee5565b34801561037757600080fd5b506101b5610f45565b34801561038c57600080fd5b506102cf61039b366004611c6f565b610fd3565b3480156103ac57600080fd5b506102cf6103bb366004611bd4565b611059565b3480156103cc57600080fd5b506101b56110d7565b3480156103e157600080fd5b5061021a6103f0366004611dd2565b6110e6565b34801561040157600080fd5b506101e2610410366004611bd4565b6110f5565b34801561042157600080fd5b5061021a610430366004611e0e565b611101565b34801561044157600080fd5b506101b5610450366004611bd4565b611139565b34801561046157600080fd5b506101b561124a565b34801561047657600080fd5b5061018b610485366004611e8a565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156104bf57600080fd5b50600b546102cf565b60006001600160e01b031982166380ac58cd60e01b14806104f957506001600160e01b03198216635b5e139f60e01b145b8061051457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461052990611ebd565b80601f016020809104026020016040519081016040528092919081815260200182805461055590611ebd565b80156105a25780601f10610577576101008083540402835291602001916105a2565b820191906000526020600020905b81548152906001019060200180831161058557829003601f168201915b5050505050905090565b60006105b782611257565b506000908152600460205260409020546001600160a01b031690565b60006105de82610ee5565b9050806001600160a01b0316836001600160a01b031614156106515760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061066d575061066d8133610485565b6106df5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610648565b6106e983836112b9565b505050565b60008181526002602052604081205481906001600160a01b031615155b9392505050565b61071c3382611327565b6107385760405162461bcd60e51b815260040161064890611ef8565b6106e98383836113a5565b336107845760405162461bcd60e51b81526020600482015260116024820152701859191c995cdcc81b9bdd08199bdd5b99607a1b6044820152606401610648565b600061078f82610ee5565b90506001600160a01b0381166107e75760405162461bcd60e51b815260206004820181905260248201527f746f6b656e206f776e65722061646472657373206973206d69737365642021216044820152606401610648565b6001600160a01b0381163314156108715760405162461bcd60e51b815260206004820152604260248201527f746865206f6e652077686f2077616e747320746f206275792074686520746f6b60448201527f656e2073686f756c64206e6f742062652074686520746f6b656e2773206f776e60648201526132b960f11b608482015260a401610648565b6000828152600c60209081526040808320815160c0810183528154815260018201546001600160a01b039081169482019490945260028201548416928101929092526003810154909216606082015260048201546080820181905260059092015460a0820152600b549092916108e691611f5c565b9050803410156109505760405162461bcd60e51b815260206004820152602f60248201527f796f75277265206e6f742073656e64696e6720656e6f756768206d6f6e65792060448201526e1d1bc8189d5e481d1a1a5cc8139195608a1b6064820152608401610648565b81604001516001600160a01b03166108fc83608001519081150290604051600060405180830381858888f19350505050158015610991573d6000803e3d6000fd5b5061099d8333866113a5565b6040820180516001600160a01b0316606084015233905260a082018051600191906109c9908390611f5c565b9052506000848152600c6020908152604080832085518155918501516001830180546001600160a01b03199081166001600160a01b039384161790915586830151600285018054831691841691909117905560608701516003850180549092169083161790556080860151600484015560a0860151600590930192909255600a54600b5491519216926108fc8215029290818181858888f19350505050158015610a77573d6000803e3d6000fd5b5050505050565b6060600061070b83611139565b6106e983838360405180602001604052806000815250611101565b60008061070b83610fd3565b600033610af85760405162461bcd60e51b815260206004820152601460248201527361646472657373206e6f7420666f756e6420212160601b6044820152606401610648565b600d83604051610b089190611f74565b9081526040519081900360200190205460ff1615610b685760405162461bcd60e51b815260206004820152601a60248201527f746f6b656e55524920697320616c7265616479206d696e7465640000000000006044820152606401610648565b60008211610bb85760405162461bcd60e51b815260206004820152601860248201527f5072696365206d7573742062652061626f7665207a65726f00000000000000006044820152606401610648565b600754610bc6906001611f5c565b6007819055610bd6903390611541565b610be260075484611683565b610bed3060016110e6565b506040805160c0810182526007805480835233602080850182815285870192835260006060870181815260808801998a5260a08801828152958252600c909352969096209451855594516001850180546001600160a01b039283166001600160a01b031991821617909155915160028601805491831691841691909117905594516003850180549190961691161790935592516004820155905160059091015554919050565b33610cd55760405162461bcd60e51b815260206004820152601260248201527161646472657373206973206d697373696e6760701b6044820152606401610648565b6000610ce083610ee5565b90506001600160a01b0381163314610d4c5760405162461bcd60e51b815260206004820152602960248201527f796f75277265206e6f7420616c6c6f77656420746f206d61696e7461696e20746044820152683434b9903a37b5b2b760b91b6064820152608401610648565b6000600c60008581526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016003820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016004820154815260200160058201548152505090508281608001818152505080600c60008681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816004015560a0820151816005015590505050505050565b6000818152600260205260408120546001600160a01b0316806105145760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610648565b60098054610f5290611ebd565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7e90611ebd565b8015610fcb5780601f10610fa057610100808354040283529160200191610fcb565b820191906000526020600020905b815481529060010190602001808311610fae57829003601f168201915b505050505081565b60006001600160a01b03821661103d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610648565b506001600160a01b031660009081526003602052604090205490565b600a546000906001600160a01b031633146110ce5760405162461bcd60e51b815260206004820152602f60248201527f796f7520646f6e277420686176652061636365737320746f206d6f646966792060448201526e74686520746f6b656e20707269636560881b6064820152608401610648565b50600b81905590565b60606001805461052990611ebd565b6110f133838361171d565b5050565b60008061070b83610ee5565b61110b3383611327565b6111275760405162461bcd60e51b815260040161064890611ef8565b611133848484846117ec565b50505050565b606061114482611257565b6000828152600660205260408120805461115d90611ebd565b80601f016020809104026020016040519081016040528092919081815260200182805461118990611ebd565b80156111d65780601f106111ab576101008083540402835291602001916111d6565b820191906000526020600020905b8154815290600101906020018083116111b957829003601f168201915b5050505050905060006111f460408051602081019091526000815290565b9050805160001415611207575092915050565b815115611239578082604051602001611221929190611f90565b60405160208183030381529060405292505050919050565b6112428461181f565b949350505050565b60088054610f5290611ebd565b6000818152600260205260409020546001600160a01b03166112b65760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610648565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906112ee82610ee5565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061133383610ee5565b9050806001600160a01b0316846001600160a01b0316148061137a57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806112425750836001600160a01b0316611393846105ac565b6001600160a01b031614949350505050565b826001600160a01b03166113b882610ee5565b6001600160a01b03161461141c5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610648565b6001600160a01b03821661147e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610648565b6114896000826112b9565b6001600160a01b03831660009081526003602052604081208054600192906114b2908490611fbf565b90915550506001600160a01b03821660009081526003602052604081208054600192906114e0908490611f5c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166115975760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610648565b6000818152600260205260409020546001600160a01b0316156115fc5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610648565b6001600160a01b0382166000908152600360205260408120805460019290611625908490611f5c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b03166116fe5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610648565b600082815260066020908152604090912082516106e992840190611a9d565b816001600160a01b0316836001600160a01b0316141561177f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610648565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6117f78484846113a5565b61180384848484611892565b6111335760405162461bcd60e51b815260040161064890611fd6565b606061182a82611257565b600061184160408051602081019091526000815290565b90506000815111611861576040518060200160405280600081525061070b565b8061186b8461199f565b60405160200161187c929190611f90565b6040516020818303038152906040529392505050565b60006001600160a01b0384163b1561199457604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906118d6903390899088908890600401612028565b602060405180830381600087803b1580156118f057600080fd5b505af1925050508015611920575060408051601f3d908101601f1916820190925261191d91810190612065565b60015b61197a573d80801561194e576040519150601f19603f3d011682016040523d82523d6000602084013e611953565b606091505b5080516119725760405162461bcd60e51b815260040161064890611fd6565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611242565b506001949350505050565b6060816119c35750506040805180820190915260018152600360fc1b602082015290565b8160005b81156119ed57806119d781612082565b91506119e69050600a836120b3565b91506119c7565b60008167ffffffffffffffff811115611a0857611a08611c8a565b6040519080825280601f01601f191660200182016040528015611a32576020820181803683370190505b5090505b841561124257611a47600183611fbf565b9150611a54600a866120c7565b611a5f906030611f5c565b60f81b818381518110611a7457611a746120db565b60200101906001600160f81b031916908160001a905350611a96600a866120b3565b9450611a36565b828054611aa990611ebd565b90600052602060002090601f016020900481019282611acb5760008555611b11565b82601f10611ae457805160ff1916838001178555611b11565b82800160010185558215611b11579182015b82811115611b11578251825591602001919060010190611af6565b50611b1d929150611b21565b5090565b5b80821115611b1d5760008155600101611b22565b6001600160e01b0319811681146112b657600080fd5b600060208284031215611b5e57600080fd5b813561070b81611b36565b60005b83811015611b84578181015183820152602001611b6c565b838111156111335750506000910152565b60008151808452611bad816020860160208601611b69565b601f01601f19169290920160200192915050565b60208152600061070b6020830184611b95565b600060208284031215611be657600080fd5b5035919050565b80356001600160a01b0381168114611c0457600080fd5b919050565b60008060408385031215611c1c57600080fd5b611c2583611bed565b946020939093013593505050565b600080600060608486031215611c4857600080fd5b611c5184611bed565b9250611c5f60208501611bed565b9150604084013590509250925092565b600060208284031215611c8157600080fd5b61070b82611bed565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611cbb57611cbb611c8a565b604051601f8501601f19908116603f01168101908282118183101715611ce357611ce3611c8a565b81604052809350858152868686011115611cfc57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611d2757600080fd5b61070b83833560208501611ca0565b600060208284031215611d4857600080fd5b813567ffffffffffffffff811115611d5f57600080fd5b61124284828501611d16565b60008060408385031215611d7e57600080fd5b823567ffffffffffffffff811115611d9557600080fd5b611da185828601611d16565b95602094909401359450505050565b60008060408385031215611dc357600080fd5b50508035926020909101359150565b60008060408385031215611de557600080fd5b611dee83611bed565b915060208301358015158114611e0357600080fd5b809150509250929050565b60008060008060808587031215611e2457600080fd5b611e2d85611bed565b9350611e3b60208601611bed565b925060408501359150606085013567ffffffffffffffff811115611e5e57600080fd5b8501601f81018713611e6f57600080fd5b611e7e87823560208401611ca0565b91505092959194509250565b60008060408385031215611e9d57600080fd5b611ea683611bed565b9150611eb460208401611bed565b90509250929050565b600181811c90821680611ed157607f821691505b60208210811415611ef257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611f6f57611f6f611f46565b500190565b60008251611f86818460208701611b69565b9190910192915050565b60008351611fa2818460208801611b69565b835190830190611fb6818360208801611b69565b01949350505050565b600082821015611fd157611fd1611f46565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061205b90830184611b95565b9695505050505050565b60006020828403121561207757600080fd5b815161070b81611b36565b600060001982141561209657612096611f46565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826120c2576120c261209d565b500490565b6000826120d6576120d661209d565b500690565b634e487b7160e01b600052603260045260246000fdfea264697066735822122012c1d15bea93a58d484b1ed61a33593a0e427b134917aa19d4ad6f4e9cbcfb8e64736f6c63430008090033";

type SahabaMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SahabaMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SahabaMarketplace__factory extends ContractFactory {
  constructor(...args: SahabaMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SahabaMarketplace> {
    return super.deploy(overrides || {}) as Promise<SahabaMarketplace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SahabaMarketplace {
    return super.attach(address) as SahabaMarketplace;
  }
  override connect(signer: Signer): SahabaMarketplace__factory {
    return super.connect(signer) as SahabaMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SahabaMarketplaceInterface {
    return new utils.Interface(_abi) as SahabaMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SahabaMarketplace {
    return new Contract(address, _abi, signerOrProvider) as SahabaMarketplace;
  }
}
